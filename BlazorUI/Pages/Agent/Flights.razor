@page "/Flights"
@using Domain.Interfaces
@using Domain.Model
@layout AgentLayout
@inject IFlight flightService
@inject NavigationManager navMgr

<div class="container">
    <div class="row justify-content-between">
        <div class="col-4">
            <h3>Flights</h3>
        </div>
        <div class="col-4">
            <button type="submit" class="btn btn-primary btn-block mb-4" @onclick="@CreateFlightAsync">New Flight</button>
        </div>
    </div>
    <div class="row"></div>
        <div class="col">
           <table class="table table-bordered table-condensed table-striped table-hover sortable">  
                   @if (flights.Count() == 0)  
                       {  
                       <tr>  
                           <td colspan="10">No flights found.</td>  
                       </tr>  
                   }  
                   else     
                   {
                       <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" 
                                       FilterMode="FilterMode.Simple" PageSize="10" AllowPaging="true" AllowSorting="true" Data="@flights" TItem="Flight" ColumnWidth="300px" 
                                       FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                       LogicalFilterOperator="LogicalFilterOperator.Or">
                           <Columns>
                               <RadzenDataGridColumn TItem="Flight" Property="flightId" Title="Flight ID" Width="90px" TextAlign="TextAlign.Center" />
                               <RadzenDataGridColumn TItem="Flight" Property="aircraftCode" Filterable="false" Title="Aircraft Code" Width="110px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="airline" Title="Airline" Width="150px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="origin" Title="Origin" Width="150px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="destination" Title="Destination" Width="150px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="departureDate" Title="Departure Date" Width="175px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="arrivalDate" Filterable="false" Title="Arrival Date" Width="175px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="duration" Filterable="false" Title="Duration" Width="90px" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="status" Filterable="false" Title="Status" Width="150px" TextAlign="TextAlign.Center"/>
                               @*<RadzenDataGridColumn TItem="Flight" Property="additionalService" Filterable="false" Title="Additional Services" TextAlign="TextAlign.Center"/>
                               <RadzenDataGridColumn TItem="Flight" Property="seats" Filterable="false" Title="Seats" TextAlign="TextAlign.Center"/>*@
                           </Columns>
                       </RadzenDataGrid>
                   }  
               </table>  
           </div>  
    </div>

@code {
    ICollection<Flight> flights = new List<Flight>();
    /*ICollection<AdditionalService> additionalServices = new List<AdditionalService>();
    ICollection<Seat> seats = new List<Seat>();*/
    Flight selectedFlight;
    
    protected override async Task OnInitializedAsync()
    {
        /*AdditionalService additionalService1 = new("food", true, 10);
        AdditionalService additionalService2 = new("drinks", true, 20);
        Seat seat1 = new("premium", 200, 20);
        additionalServices.Add(additionalService1);
        additionalServices.Add(additionalService2);
        seats.Add(seat1);*/
        Flight flight1 = new(1, 101, "TAP", "Lisbon", "Madrid", "20-05-2022", "20-05-2022", 90, "normal");
        Flight flight2 = new(2, 102, "Emirates", "Lisbon", "Dubai", "21-05-2022", "21-05-2022", 90, "normal");
        Flight flight3 = new(3, 103, "Iberia", "Madrid", "Lisbon", "22-05-2022", "22-05-2022", 90, "normal");
        flights.Add(flight1);
        flights.Add(flight2);
        flights.Add(flight3);
        //flights = await flightService.GetAllFlightsAsync();
    }

    private void CreateFlightAsync()
    {
        navMgr.NavigateTo("/CreateFlight");
    }

}