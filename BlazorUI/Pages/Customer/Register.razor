@page "/Register"
@using Modals
@using Domain.Model
@using Domain.Interfaces
@inject NavigationManager navMgr
@inject IUser userService



<div class="container mb-5" style="width: 100%; height: 400px">
  <div class="row">
    <div class="col-sm">
      <!-- Section: Design Block -->
      <section class="">
        <!-- Jumbotron -->
        <div class="px-4 py-5 px-md-5 text-center text-lg-start">
          <div class="container">
            <div class="row gx-lg-5 align-items-center">
              <div class="col-lg-6 mb-5 mb-lg-0">
                <h1 class="my-5 display-3 fw-bold ls-tight">
                  The best offers <br />
                  <span style="color: #00887D">for your trips</span>
                </h1>
                <p style="color: hsl(217, 10%, 50.8%)">
                  Lorem ipsum dolor sit amet consectetur adipisicing elit.
                  Eveniet, itaque accusantium odio, soluta, corrupti aliquam
                  quibusdam tempora at cupiditate quis eum maiores libero
                  veritatis? Dicta facilis sint aliquid ipsum atque?
                </p>
                    
            
              </div>
          
              <div class="col-lg-6 mb-5 mb-lg-0">
                <div class="card">
                  <div class="card-body py-5 px-md-5">
                    <h3 class="text-center mb-4">Register</h3>
                        @if (!string.IsNullOrEmpty(response))
                                                            {
                                                                <label>@response</label>
                                                            }
                                                            @if (showModal)
                                                            {
                                                                <Modal>
                                                                    <p>Register was successful.</p>
                                                                    <button @onclick="Proceed">Wonderful</button>
                                                                </Modal>
                                                            }
                        <EditForm Model="@userToRegister" OnValidSubmit="RegisterButtonClicked">
                          <DataAnnotationsValidator />
                          <ValidationSummary />
                          <!-- 2 column grid layout with text inputs for the first and last names -->
                          <div class="row">
                            <div class="col-md-6 mb-4">
                              <div class="form-outline">
                                <label>First Name</label>
                                <InputText @bind-Value="userToRegister.FirstName" class="form-control"/>
                                <ValidationMessage For="@(() => userToRegister.FirstName)"/>

                              </div>
                            </div>
                            <div class="col-md-6 mb-4">
                              <div class="form-outline">
                                <label>Last Name</label>
                                <InputText @bind-Value="userToRegister.LastName" class="form-control"/>
                                <ValidationMessage For="@(() => userToRegister.LastName)"/>

                              </div>
                            </div>
                          </div>

                          <!-- Email input -->
                          <div class="form-outline mb-4">
                            <label>Email</label>
                            <InputText @bind-Value="userToRegister.Email" class="form-control"/>
                            <ValidationMessage For="@(() => userToRegister.Email)"/>

                          </div>

                          <!-- Password input -->
                          <div class="form-outline mb-4">
                            <label>Password</label>
                            <InputText @bind-Value="userToRegister.Password" class="form-control"/>
                            <ValidationMessage For="@(() => userToRegister.Password)"/>

                          </div>

                          <!-- Checkbox -->
                          <div class="form-check d-flex mb-4">
                            <label class="form-check-label" for="form2Example33">Subscribe to our newsletter</label>
                            <input class="form-check-input me-2" type="checkbox" value="" id="form2Example33"/>
                          </div>

                          <!-- Submit button -->
                          <button type="button" class="btn btn-primary btn-block mb-4" @onclick="RegisterButtonClicked">
                            Register
                          </button>
                        </EditForm>
                  </div>
                </div>
              </div>
            </div>
                
          </div>
              
        </div>
        <!-- Jumbotron -->
      </section>
      <!-- Section: Design Block -->
    </div>
  </div>
  
</div>

@code {
  private User userToRegister = new User();
  private String response = "";
  private bool showModal = false;
  
  private async Task RegisterButtonClicked()
  {

    try
    {
      userToRegister.Role = "client";
      await userService.SaveUserAsync(this.userToRegister);
      showModal = true;
      this.userToRegister = new User();

    }
    catch (Exception e)
    {
      response = e.Message;
      Console.WriteLine(response);
    }
  }
  
  private void Proceed()
  {
    showModal = false;
    navMgr.NavigateTo("/");
  }
}