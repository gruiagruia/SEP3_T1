@page "/EditAccount"
@using Domain.Model
@using Domain.Interfaces
@using BlazorUI.Authentication
@inject NavigationManager navMgr
@inject IUser userService
@inject IAuth authService

<div class="container mb-5" style="width: 70%; height: 300px">
  <div class="row">
    <div class="col-sm">
      <div class="card">
        <div class="card-body py-5 px-md-5">
          <EditForm Model="@userToEdit" OnValidSubmit="UpdateButtonClicked">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <h3 class="text-center mb-4">Edit Account</h3>
            <label>@response</label>
            <!-- 2 column grid layout with text inputs for the first and last names -->
            <div class="row mb-4">
              <div class="col">
                <div class="form-outline">
                  <label>First Name</label>
                  <InputText placeholder="@userLogged.FirstName" @bind-Value="userToEdit.FirstName" class="form-control"></InputText>
                  <ValidationMessage For="@(() => userToEdit.FirstName)"/>

                </div>
              </div>
              <div class="col">
                <div class="form-outline">
                  <label>Last Name</label>
                  <InputText placeholder="@userLogged.LastName" @bind-Value="userToEdit.LastName" class="form-control"></InputText>
                  <ValidationMessage For="@(() => userToEdit.LastName)"/>
                </div>
              </div>
            </div>

            <!-- Email input -->
            <div class="form-outline mb-4">
              <label>Email</label>
              <InputText placeholder="@userLogged.Email" @bind-Value="userToEdit.Email" class="form-control"></InputText>
              <ValidationMessage For="@(() => userToEdit.Email)"/>
            </div>

            <!-- Text input -->
            <div class="form-outline mb-4">
              <label>Password</label>
              <InputText placeholder="@userLogged.Password" @bind-Value="userToEdit.Password" class="form-control"></InputText>
              <ValidationMessage For="@(() => userToEdit.Password)"/>
            </div>

            <!-- Submit button -->
            <button type="button" class="btn btn-primary btn-block mb-4" @onclick="UpdateButtonClicked">Update</button>
          </EditForm>
        </div>
      </div>
    </div>
  </div>
</div>




@code {
  private User userToEdit = new User();
  private User userLogged = new User();
  private string response = "";

  private async Task UpdateButtonClicked()
  {
    try
    {
      userToEdit.Id = userLogged.Id;
      await userService.UpdateUserAsync(userToEdit);
      navMgr.NavigateTo("/");
    }
    catch (Exception e)
    {
      response = e.Message;
    }
    
  }
  protected override async Task OnInitializedAsync()
  {
    userLogged = await authService.GetUserFromCacheAsync();
  }
}